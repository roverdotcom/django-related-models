[tox]
envlist =
    clean,
    check,
{% for env in tox_environments|sort %}
    {{ env }},
{% endfor %}
    docs,

[gh-actions]
python =
    3.7: 3.7
    3.8: 3.8
    3.9: 3.9
    3.10: 3.10,docs,clean,check

[testenv]
basepython =
    {docs,bootstrap,clean,check,report,codecov}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    factory_boy
    future
    pytest
    pytest-cov
    pytest-django

commands =
    {posargs:pytest -vv --ignore=src}

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    # sphinx-build -b linkcheck docs dist/docs

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
usedevelop = false
commands =
    python ci/bootstrap.py
[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
    twine
skip_install = true
usedevelop = false
commands =
    python setup.py sdist
    twine check dist/*.tar.gz
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --verbose --check-only --diff src tests setup.py

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

{% for env, config in tox_environments|dictsort %}
[testenv:{{ env }}]
basepython = {env:TOXPYTHON:{{ config.python }}}
{% if config.cover or config.env_vars %}
setenv =
    {[testenv]setenv}
{% endif %}
{% for var in config.env_vars %}
    {{ var }}
{% endfor %}
{% if config.cover %}
usedevelop = true
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv}
{% endif %}
{% if config.cover or config.deps %}
deps =
    {[testenv]deps}
{% endif %}
{% if config.cover %}
    pytest-cov
{% endif %}
{% for dep in config.deps %}
    {{ dep }}
{% endfor %}

{% endfor %}
